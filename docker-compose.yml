services:
  # nginx:
  #   image: nginx:stable-alpine
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #   ports:
  #     - "80:80"
  #   networks:
  #     - kontact-network
  #   depends_on:
  #     - frontend
  #     - backend

  pgsql:
    image: postgres:17.2-alpine
    container_name: kontact-pgsql
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${DB_NAME:-postgres}"
      POSTGRES_USER: "${DB_USER:-postgres}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-postgres}"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 2s
      retries: 20
    volumes:
      - pgsql:/var/lib/postgresql/data
    networks:
      - kontact-network

  redis:
    image: redis:8.0-alpine
    container_name: kontact-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 2s
      retries: 5
    volumes:
      - redis:/data
    networks:
      - kontact-network

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    hostname: backend
    container_name: kontact-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      pgsql:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - kontact-network
    env_file:
      - .env

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: ./frontend/Dockerfile
  #   hostname: frontend
  #   container_name: kontact-frontend
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - kontact-network
  #   env_file:
  #     - .env

networks:
  kontact-network:
    driver: bridge

volumes:
  # nginx:
  #   name: kontact-web-next_nginx
  pgsql:
    name: kontact-web-next_pgsql
  redis:
    name: kontact-web-next_redis
